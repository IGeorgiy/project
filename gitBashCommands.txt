# Настройка remote (настройка удаленного репозитория)
git --version - показывает версию
git remote add <имя удаленного репозитория> <ссылка на удаленный репозиторий> - добавить удаленный репозиторий
git remote -v - показывает ссылки на удаленные репозитории

# Настройка SSH
ssh-keygen - генерирует ssh ключ
git clone <ssh ссылка> <Имя директории> - копирует директорию с удаленного репозитория

# Настройка гита
git config --global user.name "<name>" - устанавливает логин пользователя
git config --global user.email "<email>" - устанавливает емаил
git config --global color.ui auto - включает подсветку
git config --global core.editor "<program>" - установка редактора по умолчанию

# Системные команды консоли
cd - выбрать директорию
cd ~ - перейти в корневую директорию
cp <имя файла> <имя нового файла> - скопировать файл
mkdir - создать директорию
touch - сздать файл
cat - прочитать файл
ls - список файлов и директорий в текущем пути
ls -a - показать список директорий и файлов включая невидимые
.. - перейти в предыдущую директорию

# Команды гита
#
git init - установить выбраный каталог как гит репозиторий
git status - показать измененные файлы для комита
git add <file name> - добавить файл в список для комита
git add . - добавить все файлы из текущего каталога в список для комита
git commit - закомитить добавленные в список файлы
git commit -m "<Сообщение>" - закомитить без перехода в вим редактор
# История
git log - показать историю коммитов в текущей ветке
git log --oneline - показать историю коммитов в одну строку
git reflog - показать историю действий
git reset <хэш комита> - сброс текущего состояния истории
git revert <хэш комита> - отмена последствий коммита
git restore <имя файла> - сброс состояния файла на указанное
# Ветвления
git branch - показать список ветвей
git branch <имя новой ветки> - создать новую ветку с указанным именем
git branch <имя новой ветки> <имя ветки источника> - создать новую ветку исходящую из указанной
git checkout <имя ветки> - переключиться на указанную ветку
git checkout -b <имя новой ветки> - создать новую ветку и переключиться к ней
git branch -d <имя ветки> - удаляет указанную ветку в локальном репозитории, можно указывать несколько, разделитель - пробел
git push --delete <имя удаленного репозитория> <имя ветки> - удаляет ветку(и) (разделитель пробел) в удалённом репозитории 
git merge <имя ветки> - переносит изменения из указанной ветки в текущую
# Публикация
git push - загружает закомиченные изменения в удаленный репозиторий
git push --set-upstream <каталог куда> <имя новой ветки> - загружает закомиченные изменения в удаленный репозиторий создав отсутствующую ветку
git push -u <каталог куда> <имя новой ветки> - сокращенное написание предыдущей команды
git pull - загружает изменения из удаленного репозитория в локальный
git fetch - подгрузить обновления из репозитория
